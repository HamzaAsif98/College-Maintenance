<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ji1opiJG1B//2Q==
</value>
  </data>
</root>